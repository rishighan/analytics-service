version: "3.2"

services:
  api:
    build:
      context: .
    image: frishi/analytics-service-api
    container_name: analytics-service-api
    env_file: docker-compose.env
    command:
      - --port=3000
    environment:
      SERVICES: api
      PORT: 3000
    depends_on:
      - nats
      - zookeeper
    labels:
      # - "traefik.enable=true"
      # - "traefik.backend=api"
      # - "traefik.port=3000"
      # - "traefik.frontend.entryPoints=http"
      # - "traefik.frontend.rule=PathPrefix:/"
      - "traefik.http.services.api.loadbalancer.server.port=3000"
    networks:
      - rgnetwork

  greeter:
    build:
      context: .
    image: frishi/analytics-service-greeter
    container_name: analytics-service-greeter
    env_file: docker-compose.env
    environment:
      SERVICES: analytics
    labels:
      - "traefik.enable=false"
    depends_on:
      - nats
      - zookeeper
    networks:
      - rgnetwork

  nats:
    image: nats
    container_name: nats
    labels:
      - "traefik.enable=false"
    networks:
      - rgnetwork

  zookeeper:
    image: 'bitnami/zookeeper:latest'
    container_name: zookeeper
    environment: 
      ALLOW_ANONYMOUS_LOGIN: 'yes'
    ports:
      - '2181:2181'
    volumes:
      - ../zookeeper/data:/bitnami/zookeeper
    networks:
      - rgnetwork

  traefik:
    image: traefik:v2.0.1
    container_name: traefik
    restart: unless-stopped
    command:
      # - "--api"
      # - "--docker"
      # - "--docker.watch"
      - --entrypoints.web.address=:80
      - --providers.docker=true
      - --api.insecure
    # labels:
    #   - "traefik.enable=true"
    #   - "traefik.backend=traefik"
    #   - "traefik.port=8080"
    ports:
      - "80:80"
      - "3000:3000"
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      # - /dev/null:/traefik.toml
    networks:
      - rgnetwork
      - default

networks:
  rgnetwork:
    driver: bridge
